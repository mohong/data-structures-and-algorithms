(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{167:function(t,a,r){t.exports=r.p+"assets/img/sort-category.7d8a24c5.png"},174:function(t,a,r){"use strict";r.r(a);var s=[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("h2",{attrs:{id:"排序的稳定性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序的稳定性","aria-hidden":"true"}},[t._v("#")]),t._v(" 排序的稳定性")]),t._v(" "),s("p",[t._v("假设(1<=i<=n, 1<=j<=n)，且在排序前的序列中ri领先于rj（即i<j）。如果排序后ri仍领先于rj，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中rj领先于ri，则称所用的排序方法是不稳定的。")]),t._v(" "),s("h2",{attrs:{id:"内排序和外排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内排序和外排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 内排序和外排序")]),t._v(" "),s("p",[t._v("根据在排序过程中待排序的记录是否全部被放置在内存中，排序分为：内排序和外排序。\n内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。外排序是由于排序的记录个数太多，不能同时放置在内存中，整个排序过程需要在内存之外多次交换数据才能进行。")]),t._v(" "),s("p",[t._v("对于内排序来说，排序算法的性能主要是受3个方面影响：")]),t._v(" "),s("ol",[s("li",[t._v("时间性能")]),t._v(" "),s("li",[t._v("辅助空间")]),t._v(" "),s("li",[t._v("算法的复杂度（算法本身的复杂度，而不是指算法的时间复杂度）")])]),t._v(" "),s("h2",{attrs:{id:"常见排序方法分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见排序方法分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见排序方法分类")]),t._v(" "),s("p",[s("img",{attrs:{src:r(167),alt:"sort"}})])])}],e=r(0),i=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},s,!1,null,null,null);a.default=i.exports}}]);